name: Deploy to Azure Kubernetes Service (AKS) - CicdTest

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

env:
  AZURE_REGISTRY: ${{ secrets.AZURE_REGISTRY }}
  AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
  AKS_CLUSTER_NAME: ${{ secrets.AKS_CLUSTER_NAME }}
  PROJECT_NAME: "cicdtest"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Build Frontend
      working-directory: ./frontend
      run: |
        npm ci
        npm run build
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Azure Container Registry
      uses: azure/docker-login@v2
      with:
        login-server: ${{ env.AZURE_REGISTRY }}.azurecr.io
        username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
        password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}
    
    - name: Build and Push Backend
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ env.AZURE_REGISTRY }}.azurecr.io/${{ env.PROJECT_NAME }}-backend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build and Push Frontend
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        push: true
        tags: ${{ env.AZURE_REGISTRY }}.azurecr.io/${{ env.PROJECT_NAME }}-frontend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy-to-aks:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Get AKS Credentials
      run: |
        az aks get-credentials \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --name ${{ env.AKS_CLUSTER_NAME }} \
          --overwrite-existing
    
    - name: Deploy to AKS
      run: |
        # Update image tags in Kubernetes manifests
        sed -i "s|IMAGE_TAG|${{ github.sha }}|g" k8s/*.yaml
        sed -i "s|ACR_NAME|${{ env.AZURE_REGISTRY }}|g" k8s/*.yaml
        sed -i "s|PROJECT_NAME|${{ env.PROJECT_NAME }}|g" k8s/*.yaml
        
        # Apply Kubernetes manifests
        kubectl apply -f k8s/
        
        # Wait for deployment to be ready
        kubectl rollout status deployment/${{ env.PROJECT_NAME }}-backend -n board-app
        kubectl rollout status deployment/${{ env.PROJECT_NAME }}-frontend -n board-app
    
    - name: Get Service URLs
      run: |
        echo "Backend Service URL:"
        kubectl get service ${{ env.PROJECT_NAME }}-backend-service -n board-app -o jsonpath='{.status.loadBalancer.ingress[0].ip}'
        echo ""
        echo "Frontend Service URL:"
        kubectl get service ${{ env.PROJECT_NAME }}-frontend-service -n board-app -o jsonpath='{.status.loadBalancer.ingress[0].ip}' 